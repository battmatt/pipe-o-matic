#!/usr/bin/env bash

# Top-level test script

# Author: Walker Hale (hale@bcm.edu), 2012
#         Human Genome Sequencing Center, Baylor College of Medicine
#
# This file is part of Pipe-o-matic.
#
# Pipe-o-matic is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pipe-o-matic is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pipe-o-matic.  If not, see <http://www.gnu.org/licenses/>.

if [[ "$1" == '-v' ]]; then
    shift
    export VERBOSE=1
else
    export VERBOSE=''
fi

echo
echo ======================================================================
date

export TEST_ROOT=$(cd $(dirname "$0"); pwd)
export PROJECT_ROOT=$(dirname "$TEST_ROOT")
export PMATIC_BASE="$TEST_ROOT"/pmatic_base
export PYTHONPATH="$PROJECT_ROOT"/lib:"$PROJECT_ROOT"/test/lib
export PYTHONPATH="$PYTHONPATH":"$PROJECT_ROOT"/local/lib

# Install PyYAML into local if missing.
if [[ ! -d "$PROJECT_ROOT"/local/lib/yaml ]]; then
    echo 'Building local/lib...'
    mkdir -p "$PROJECT_ROOT"/local/downloads "$PROJECT_ROOT"/local/lib
    cd "$PROJECT_ROOT"/local/downloads
    curl -O http://pyyaml.org/download/pyyaml/PyYAML-3.10.tar.gz
    tar xzf PyYAML-3.10.tar.gz
    cd ..
    ln -s ../downloads/PyYAML-3.10/lib/yaml lib
    cd ..
    echo 'done'
fi

if [[ "$VERBOSE" ]]; then
    echo "PYTHONPATH=$PYTHONPATH"
fi

cd "$TEST_ROOT"

if [[ $(type -P pep8) ]]; then
    pep8 ../bin/pmatic ../lib/*.py lib/*.py
fi

python -m unittest pmatictest

for case_dir in $(ls "$TEST_ROOT"/cases); do
    if [[ "$VERBOSE" ]]; then
        echo $case_dir
    fi
    test_case_path="$TEST_ROOT"/cases/"$case_dir"
    output_path="$PROJECT_ROOT"/target/test/"$case_dir"
    rm -rf "$output_path"
    mkdir -p "$output_path"
    mkdir "$output_path"/execute
    mkdir "$output_path"/expect
    "$test_case_path"/test "$output_path"
done
