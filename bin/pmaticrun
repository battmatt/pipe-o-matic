#!/usr/bin/env python2.7

"""Execute or manage a pipeline in a particular context (directory)."""

# Author: Walker Hale (hale@bcm.edu), 2012
#         Human Genome Sequencing Center, Baylor College of Medicine
#
# This file is part of Pipe-o-matic.
#
# Pipe-o-matic is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pipe-o-matic is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pipe-o-matic.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import os
import sys

import pmatic


def main(args=None):
    if not args:
        args = sys.argv[1:]
    parser = build_command_parser()
    command = pmatic.parse_args_and_env(args, parser)
    engine = pmatic.build_engine_from_namespace(command)
    try:
        engine.run(command.pipeline)
    except EnvironmentError, e:
        print >>sys.stderr, str(e)
        sys.exit(e.errno)


def build_command_parser():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('-v', '--verbose', action='store_true')
    parser.add_argument(
        'pipeline',
        help='the name of the pipeline to execute inside $PMATIC_BASE'
    )
    parser.add_argument(
        'context_path',
        help='the directory that defines the context of execution'
    )
    parser.add_argument(
        '--params', nargs='*', metavar='KEY=VALUE',
        help='optional key=value pairs (use for debugging only)'
    )  # TODO parse params into a dict
    return parser


if __name__ == '__main__':
    main()
